#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.4
#  in conjunction with Tcl version 8.6
#    Oct 03, 2020 05:51:36 PM IST  platform: Windows NT

import sys
import tkinter as tk
from drawGraph import *

try:
    import ttk
    py3 = False

except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import Graph_Sec_layout

def EnterValue():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()

    top = Toplevel1 (root)
    Graph_Sec_layout.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    Graph_Sec_layout.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

xs = 0
xe = 100
xst = 0.01
y = 0

class Toplevel1:

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("296x209+650+150")
        top.minsize(120, 1)
        top.maxsize(1370, 749)
        top.resizable(0, 0)
        top.title("Graphs")
        top.configure(background="#d9d9d9")


        self.x_start = tk.Entry(top)
        self.x_start.place(relx=0.101, rely=0.163,height=20, relwidth=0.216)
        self.x_start.configure(background="white")
        self.x_start.configure(disabledforeground="#a3a3a3")
        self.x_start.configure(font="TkFixedFont")
        self.x_start.configure(foreground="#000000")
        self.x_start.configure(insertbackground="black") 


        
        self.x_end = tk.Entry(top)
        self.x_end.place(relx=0.412, rely=0.163,height=20, relwidth=0.216)
        self.x_end.configure(background="white")
        self.x_end.configure(disabledforeground="#a3a3a3")
        self.x_end.configure(font="TkFixedFont")
        self.x_end.configure(foreground="#000000")
        self.x_end.configure(highlightbackground="#d9d9d9")
        self.x_end.configure(highlightcolor="black")
        self.x_end.configure(insertbackground="black")
        self.x_end.configure(selectbackground="blue")
        self.x_end.configure(selectforeground="white")

        self.x_step = tk.Entry(top)
        self.x_step.place(relx=0.72, rely=0.163,height=20, relwidth=0.216)
        self.x_step.configure(background="white")
        self.x_step.configure(disabledforeground="#a3a3a3")
        self.x_step.configure(font="TkFixedFont")
        self.x_step.configure(foreground="#000000")
        self.x_step.configure(highlightbackground="#d9d9d9")
        self.x_step.configure(highlightcolor="black")
        self.x_step.configure(insertbackground="black")
        self.x_step.configure(selectbackground="blue")
        self.x_step.configure(selectforeground="white")

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.101, rely=0.081, height=10, width=48)
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''x (Start)''')

        self.Label1_6 = tk.Label(top)
        self.Label1_6.place(relx=0.412, rely=0.081, height=10, width=47)
        self.Label1_6.configure(activebackground="#f9f9f9")
        self.Label1_6.configure(activeforeground="black")
        self.Label1_6.configure(background="#d9d9d9")
        self.Label1_6.configure(disabledforeground="#a3a3a3")
        self.Label1_6.configure(foreground="#000000")
        self.Label1_6.configure(highlightbackground="#d9d9d9")
        self.Label1_6.configure(highlightcolor="black")
        self.Label1_6.configure(text='''x (End)''')

        self.Label1_7 = tk.Label(top)
        self.Label1_7.place(relx=0.686, rely=0.081, height=10, width=47)
        self.Label1_7.configure(activebackground="#f9f9f9")
        self.Label1_7.configure(activeforeground="black")
        self.Label1_7.configure(background="#d9d9d9")
        self.Label1_7.configure(disabledforeground="#a3a3a3")
        self.Label1_7.configure(foreground="#000000")
        self.Label1_7.configure(highlightbackground="#d9d9d9")
        self.Label1_7.configure(highlightcolor="black")
        self.Label1_7.configure(text='''Steps''')

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.101, rely=0.368, height=18, width=96)
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(text='''Y (Function of x)''')

        self.y_fun = tk.Entry(top)
        self.y_fun.place(relx=0.101, rely=0.488,height=30, relwidth=0.824)
        self.y_fun.configure(background="white")
        self.y_fun.configure(disabledforeground="#a3a3a3")
        self.y_fun.configure(font="TkFixedFont")
        self.y_fun.configure(foreground="#000000")
        self.y_fun.configure(insertbackground="black")

        def butt():
            global xs
            global xe
            global xst
            global y

            xs = self.x_start.get()
            xe = self.x_end.get()
            xst = self.x_step.get()

            y = self.y_fun.get()
            print(xs, xe, xst,y,sep = "\n")
            draw(xs, xe, xst, y)


        self.gen_graph = tk.Button(top)
        self.gen_graph.place(relx=0.236, rely=0.718, height=34, width=157)
        self.gen_graph.configure(activebackground="#ececec")
        self.gen_graph.configure(activeforeground="#000000")
        self.gen_graph.configure(background="#d9d9d9")
        self.gen_graph.configure(disabledforeground="#a3a3a3")
        self.gen_graph.configure(foreground="#000000")
        self.gen_graph.configure(highlightbackground="#d9d9d9")
        self.gen_graph.configure(highlightcolor="black")
        self.gen_graph.configure(pady="0")
        self.gen_graph.configure(text='''Generate Graph''')
        self.gen_graph.configure(command = butt)

        

        
# if __name__ == '__main__':
#     vp_start_gui()





